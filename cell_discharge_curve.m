function [ ...
    the_charge_discharged_from_cell, ...
    the_voltage_source_voltage, ...
    the_mean_internal_resistance, ...
    the_electric_potential_energy] = ...
    cell_discharge_curve( ...
    the_time_curve_file_name, ...
    time_curve_file_names, ...
    cell_is_test, ...
    cell_identifier, ...
    maximum_cell_identifier)
[the_current, the_charge_discharged_from_cell, the_terminal_voltage] = ...
    discharge_curve(xlsread(the_time_curve_file_name));
number_of_time_curves = numel(time_curve_file_names);

figure;
plot(the_charge_discharged_from_cell, the_terminal_voltage);
hold on;

if cell_is_test
    the_title = [ ...
        'Test Li-Ion ', ...
        cell_identifier_to_string( ...
        cell_identifier, ...
        maximum_cell_identifier)];
else
    the_title = [ ...
        'Li-Ion ', ...
        cell_identifier_to_string( ...
        cell_identifier, ...
        maximum_cell_identifier)];
end

title(the_title);
xlabel('Charge Discharged from Cell (mC)');
ylabel('Voltage across Cell (V)');
legend_labels = cell(number_of_time_curves, 1);
legend_labels{1} = [ ...
    'IL = ', ...
    num2str(the_current), ...
    ' A'];

discharge_curves = cell(number_of_time_curves, 3);

for time_curve_file_names_index = 1:number_of_time_curves
    [current, charge_discharged_from_cell, terminal_voltage] = ...
        discharge_curve( ...
        xlsread(time_curve_file_names{time_curve_file_names_index}));
    extrapolation_above = ...
        charge_discharged_from_cell > ...
        the_charge_discharged_from_cell(end);
    charge_discharged_from_cell(extrapolation_above) = [];
    terminal_voltage(extrapolation_above) = [];
    
    plot(charge_discharged_from_cell, terminal_voltage);
    legend_labels{time_curve_file_names_index + 1} = [ ...
        'IL = ', ...
        num2str(current), ...
        ' A'];
    
    discharge_curves(time_curve_file_names_index, :) = ...
        {current, charge_discharged_from_cell, terminal_voltage};
end

legend(legend_labels);

the_number_of_times = numel(the_charge_discharged_from_cell);
the_internal_resistance = zeros(the_number_of_times, 1);

for the_discharge_curve_index = 1:the_number_of_times
    current = zeros(1 + number_of_time_curves, 1);
    current(1) = the_current;
    terminal_voltage = zeros(numel(current), 1);
    terminal_voltage(1) = the_terminal_voltage(the_discharge_curve_index);
    charge_discharged_from_cell = ...
        the_charge_discharged_from_cell(the_discharge_curve_index);
    
    for cell_discharge_curve_index = 1:number_of_time_curves
        current(cell_discharge_curve_index + 1) = ...
            discharge_curves{cell_discharge_curve_index, 1};
        terminal_voltage(cell_discharge_curve_index + 1) = ...
            interp1( ...
            discharge_curves{cell_discharge_curve_index, 2}, ...
            discharge_curves{cell_discharge_curve_index, 3}, ...
            charge_discharged_from_cell);
    end
    
    lm = fitlm(current, terminal_voltage);
    
    % plot_instantaneous_internal_resistance( ...
    %     charge_discharged_from_cell, ...
    %     current, ...
    %     terminal_voltage, ...
    %     lm);
    
    the_internal_resistance(the_discharge_curve_index) = ...
        -lm.Coefficients{2, 1};
end

stop = find(the_internal_resistance > 0, 1, 'last');
the_charge_discharged_from_cell(stop + 1:end) = [];
the_terminal_voltage(stop + 1:end) = [];
the_internal_resistance(stop + 1:end) = [];
the_mean_internal_resistance = mean(the_internal_resistance);

figure;
plot(the_charge_discharged_from_cell, the_internal_resistance);
hold on;
title(the_title);
xlabel('Charge Discharged from Cell (mC)');
ylabel('Internal Resistance (Ohms)');
plot([ ...
    the_charge_discharged_from_cell(1);
    the_charge_discharged_from_cell(end)], ...
    [the_mean_internal_resistance, the_mean_internal_resistance]);
legend({'Internal Resistance', 'Mean Internal Resistance'});

the_voltage_source_voltage = ...
    the_terminal_voltage + the_current .* the_internal_resistance;

figure;
plot(the_charge_discharged_from_cell, the_voltage_source_voltage);
title(the_title);
xlabel('Charge Discharged from Cell (mC)');
ylabel('Open-Circuit Voltage across Cell (V)');

the_electric_potential_energy = ...
    [ ...
    cumsum( ...
    the_voltage_source_voltage(2:end) .* ...
    diff(the_charge_discharged_from_cell), ...
    'reverse'); ...
    0];
end

function [current, charge_discharged_from_cell, terminal_voltage] = ...
    discharge_curve(time_curve)
terminal_voltage = time_curve(:, 2);
start = find(diff(terminal_voltage) < 0, 1);
terminal_voltage(1:start - 1) = [];
stop = find(terminal_voltage < 2.5, 1) - 1;
terminal_voltage(stop + 1:end) = [];
stop = stop + start - 1;
current = mean(time_curve(start:stop, 3));

% plot_current( ...
%     time_curve(start:stop, 1), ...
%     time_curve(start:stop, 3), ...
%     current);

charge_discharged_from_cell = ...
    [0; cumsum(diff(time_curve(start:stop, 1)) .* current)];
end

function plot_instantaneous_internal_resistance( ...
    charge_discharged_from_cell, ...
    current, ...
    terminal_voltage, ...
    lm)
figure;
scatter(current, terminal_voltage);
hold on;
title([ ...
    'Test Li-Ion 06', ...
    10, ...
    'Charge Discharged from Cell = ', ...
    num2str(charge_discharged_from_cell), ...
    ' mC']);
xlabel('Current (A)');
ylabel('Voltage across Cell (V)');
plot(current, lm.Fitted);
legend({ ...
    'Measured Voltage', ...
    [ ...
    'V = VOC - I * R = ', ...
    num2str(lm.Coefficients{1, 1}), ...
    ' - I * ', ...
    num2str(-lm.Coefficients{2, 1})]});
end

function plot_current(time, current, mean_current)
figure;
plot(time, current);
hold on;
title([ ...
    'IL = ', ...
    num2str(mean_current), ...
    ' A']);
xlabel('Time (ms)');
ylabel('Current (A)');
plot([time(1); time(end)], [mean_current, mean_current]);
legend({'Current', 'Mean Current'});
end
