function [ ...
    the_charge_supplied, ...
    the_open_circuit_voltage, ...
    the_mean_internal_resistance, ...
    the_work] = cell_discharge_curve( ...
        the_time_curve_file_name, ...
        time_curve_file_names, ...
        is_test, ...
        identifier, ...
        maximum_identifier)
if is_test
    the_title = [ ...
        'Test Li-Ion ', ...
        cell_identifier_to_string(identifier, maximum_identifier)];
else
    the_title = [ ...
        'Li-Ion ', ...
        cell_identifier_to_string(identifier, maximum_identifier)];
end

[the_mean_current, the_charge_supplied, the_voltage] = ...
    discharge_curve(xlsread(the_time_curve_file_name), the_title);
number_of_time_curves = numel(time_curve_file_names);

figure;
plot(the_charge_supplied, the_voltage);
hold on;
title(the_title);
xlabel('Charge Supplied (mC)');
ylabel('Voltage (V)');
legend_labels = cell(number_of_time_curves, 1);
legend_labels{1} = [ ...
    'Load Current = ', ...
    num2str(the_mean_current), ...
    ' A'];

discharge_curves = cell(number_of_time_curves, 3);

for time_curve_file_names_index = 1:number_of_time_curves
    [mean_current, charge_supplied, voltage] = ...
        discharge_curve( ...
            xlsread( ...
                time_curve_file_names{time_curve_file_names_index}), ...
            the_title);
    extrapolation_above = ...
        charge_supplied > ...
            the_charge_supplied(end);
    charge_supplied(extrapolation_above) = [];
    voltage(extrapolation_above) = [];
    
    plot(charge_supplied, voltage);
    legend_labels{time_curve_file_names_index + 1} = [ ...
        'Load Current = ', ...
        num2str(mean_current), ...
        ' A'];
    
    discharge_curves(time_curve_file_names_index, :) = ...
        {mean_current, charge_supplied, voltage};
end

legend(legend_labels);

the_number_of_times = numel(the_charge_supplied);
the_internal_resistance = zeros(the_number_of_times, 1);

for the_discharge_curve_index = 1:the_number_of_times
    mean_current = zeros(1 + number_of_time_curves, 1);
    mean_current(1) = the_mean_current;
    voltage = zeros(numel(mean_current), 1);
    voltage(1) = the_voltage(the_discharge_curve_index);
    charge_supplied = the_charge_supplied(the_discharge_curve_index);
    
    for discharge_curves_index = 1:number_of_time_curves
        mean_current(discharge_curves_index + 1) = ...
            discharge_curves{discharge_curves_index, 1};
        voltage(discharge_curves_index + 1) = ...
            interp1( ...
                discharge_curves{discharge_curves_index, 2}, ...
                discharge_curves{discharge_curves_index, 3}, ...
                charge_supplied);
    end
    
    lm = fitlm(mean_current, voltage);
    
%     plot_instantaneous_internal_resistance( ...
%         charge_supplied, ...
%         mean_current, ...
%         voltage, ...
%         lm, ...
%         the_title);
    
    the_internal_resistance(the_discharge_curve_index) = ...
        -lm.Coefficients{2, 1};
end

stop = find(the_internal_resistance > 0, 1, 'last');
the_charge_supplied(stop + 1:end) = [];
the_voltage(stop + 1:end) = [];
the_internal_resistance(stop + 1:end) = [];
the_mean_internal_resistance = mean(the_internal_resistance);

figure;
plot(the_charge_supplied, the_internal_resistance);
hold on;
title(the_title);
xlabel('Charge Supplied (mC)');
ylabel('Internal Resistance (\Omega)');
plot([ ...
    the_charge_supplied(1);
    the_charge_supplied(end)], ...
    [the_mean_internal_resistance, the_mean_internal_resistance]);
legend({ ...
    'Internal Resistance', ...
    [ ...
        'Mean Internal Resistance = ', ...
        num2str(the_mean_internal_resistance), ...
        ' \Omega']});

the_open_circuit_voltage = ...
    the_voltage + the_mean_current .* the_internal_resistance;

figure;
plot(the_charge_supplied, the_open_circuit_voltage);
title(the_title);
xlabel('Charge Supplied (mC)');
ylabel('Open-Circuit Voltage (V)');

the_work = ...
    [ ...
    cumsum( ...
        the_open_circuit_voltage(2:end) .* diff(the_charge_supplied), ...
        'reverse'); ...
    0];

figure;
plot(the_charge_supplied, the_work);
title(the_title);
xlabel('Charge Supplied (mC)');
ylabel('Work (mJ)');
end

function [mean_current, charge_supplied, voltage] = ...
    discharge_curve(time_curve, the_title)
voltage = time_curve(:, 2);
start = find(diff(voltage) < 0, 1);
voltage(1:start - 1) = [];
stop = find(voltage < 2.5, 1) - 1;
voltage(stop + 1:end) = [];
stop = stop + start - 1;
mean_current = mean(time_curve(start:stop, 3));

% plot_current( ...
%     time_curve(start:stop, 1), ...
%     time_curve(start:stop, 3), ...
%     mean_current, ...
%     the_title);

charge_supplied = ...
    [0; cumsum(diff(time_curve(start:stop, 1)) .* mean_current)];
end

function plot_instantaneous_internal_resistance( ...
    charge_supplied, ...
    current, ...
    voltage, ...
    lm, ...
    the_title)
figure;
scatter(current, voltage);
hold on;
title([the_title, ...
    10, ...
    'Charge Supplied = ', ...
    num2str(charge_supplied), ...
    ' mC']);
xlabel('Load Current (A)');
ylabel('Voltage (V)');
plot(current, lm.Fitted);
legend({ ...
    'Voltage', ...
    [ ...
        'V = V_{OC} - I_L \times R_S = ', ...
        num2str(lm.Coefficients{1, 1}), ...
        ' - I_L \times ', ...
        num2str(-lm.Coefficients{2, 1})]});
end

function plot_current(time, current, mean_current, the_title)
figure;
plot(time, current);
hold on;
title(the_title);
xlabel('Time (ms)');
ylabel('Load Current (A)');
plot([time(1); time(end)], [mean_current, mean_current]);
legend({ ...
    'Load Current', ...
    ['Mean Load Current = ', num2str(mean_current), ' A']});
end
